@model DiagnosticCenter.Models.ExaminationTemplate

@{
    ViewBag.Title = "Create";
    ViewBag.Controller = "ExaminationTemplates";
    ViewBag.Action = "ExaminationTemplates.Create";
}

<div id="icon-extempl-general" class="icon32"><br /></div><h2>@ExaminationRes.ExaminationStrings.ExaminationTemplateCreation</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/editor.js")" type="text/javascript"></script>
*@

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@ExaminationRes.ExaminationStrings.ExaminationTemplate</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            <br />
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Body)
            <br />
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExaminationTypeID_ExmType)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ExaminationTypeID_ExmType", String.Empty)
            <br />
            @Html.ValidationMessageFor(model => model.ExaminationTypeID_ExmType)
        </div>   
        
        <div class="editor-label">
            @Html.LabelFor(model => model.IsPrivate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsPrivate)
            @Html.ValidationMessageFor(model => model.IsPrivate)
        </div>        
        <br />
        <p>
            <input type="submit" value="@ExaminationRes.ExaminationStrings._Create" class="yt-uix-button"/>
        </p>
    </fieldset>
}

@*<script type="text/javascript">   
    tinyMCE.execCommand('mceAddControl', false, 'Body');
</script>*@