@model DiagnosticCenter.Models.Employee

<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
 @{ ViewBag.Controller = "Employees";
    ViewBag.Action = "Employees.Edit";
    }
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>@PatientsRes.PatientsStrings.EditPatient</legend>

        @Html.HiddenFor(model => model.ID_Employee)
        @Html.HiddenFor(model => model.ID_User)
        
        <div class="editor-label">
           @Html.Label(EmployeesRes.EmployeesStrings.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.Label(EmployeesRes.EmployeesStrings.Surname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Surname)
            @Html.ValidationMessageFor(model => model.Surname)
        </div>

        <div class="editor-label">
             @Html.Label(EmployeesRes.EmployeesStrings.Patronymic)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Patronymic)
            @Html.ValidationMessageFor(model => model.Patronymic)
        </div>
        <div class="editor-label">
           @Html.Label(EmployeesRes.EmployeesStrings.Category)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Category)
            @Html.ValidationMessageFor(model => model.Category)
        </div>

        <div class="editor-label">
            @Html.Label(EmployeesRes.EmployeesStrings.Specialty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Specialty)
            @Html.ValidationMessageFor(model => model.Specialty)
        </div>

        <div class="editor-label">
        @Html.Label(EmployeesRes.EmployeesStrings.Position)
             <select name = "position">
                <option value = "">@EmployeesRes.EmployeesStrings.ChoosePosition</option>
                <option value = "зав. відділом">@EmployeesRes.EmployeesStrings.departmentchief</option>
                <option value = "головний лікар">@EmployeesRes.EmployeesStrings.headdoctor</option>
                <option value = "лікар">@EmployeesRes.EmployeesStrings.doctor</option>
                <option value = "головна медсестра">@EmployeesRes.EmployeesStrings.headnurse</option>
                <option value = "медсестра">@EmployeesRes.EmployeesStrings.nurse</option>
                <option value = "реєстратура">@EmployeesRes.EmployeesStrings.registar</option>
             </select>
        </div>
        <div class="editor-label">
            @Html.Label(EmployeesRes.EmployeesStrings.Rate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rate)
            @Html.ValidationMessageFor(model => model.Rate)
        </div>

        <div class="editor-label">
            @Html.Label(EmployeesRes.EmployeesStrings.Cabinet)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Cabinets",EmployeesRes.EmployeesStrings.ChooseCab)
         </div>

        <div class="editor-label">
            @Html.Label(EmployeesRes.EmployeesStrings.Department)
        </div>
        <div class="editor-field">
         
        @Html.DropDownList("Depts", EmployeesRes.EmployeesStrings.ChooseDept)
        </div>
        
        <p>
            <input type="submit" value=@PatientsRes.PatientsStrings.Save />
        </p>
    </fieldset>
}
