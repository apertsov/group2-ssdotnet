@model PagedList.IPagedList<DiagnosticCenter.Models.NewsVM>
           
@{
    ViewBag.Title = NewsRes.NewsStrings.NewsDC;
}
           
 <div id="icon-news-general" class="icon32"><br /></div><h2> @NewsRes.NewsStrings.NewsDC</h2>

@using (Html.BeginForm())
{ 
    <p> 
        @NewsRes.NewsStrings.SearchByTopic: @Html.TextBox("SearchString") &nbsp; 
        <input type="submit" value=@NewsRes.NewsStrings.Find /></p> 
}

@{
    ViewBag.Controller = "News";
    ViewBag.Action = "News.Index";
 }

@foreach (var item in Model) {
    <table width = 900>
    <tr>
        <th>
            @Html.DisplayFor(modelItem => item.topic) 
        </th>
        <th align = right>
            @NewsRes.NewsStrings.Autor: 
            @Html.DisplayFor(modelItem => item.employee) 
            @Html.Raw("  ")
            @NewsRes.NewsStrings.Department: 
            @Html.DisplayFor(modelItem => item.dept)
        </th>
    </tr>
    <tr>
        <td colspan = 2>
            @Html.DisplayFor(modelItem => item.text)
        </td>
    </tr>
    @if (ViewBag.emplId == item.id_employee){
    <tr>
        <td colspan = 2>
            @Html.ActionLink(NewsRes.NewsStrings.Edit, "Edit", new { id=item.id }) |
            @Html.ActionLink(NewsRes.NewsStrings.Details, "Details", new { id=item.id }) |
            @Html.ActionLink(NewsRes.NewsStrings.Delete, "Delete", new { id=item.id })
        </td>
    </tr>
        }
    </table>
    <br/>
}


<div>
    @NewsRes.NewsStrings.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @NewsRes.NewsStrings.of @Model.PageCount 
    &nbsp; 
    @if (Model.HasPreviousPage)
    { 
        @Html.ActionLink("<<", "Index", new { page = 1, }) 
        @Html.Raw("&nbsp;"); 
        @Html.ActionLink("< " + NewsRes.NewsStrings.Previous, "Index", new { page = Model.PageNumber - 1 }) 
    }
    else
    { 
        @:<< 
        @Html.Raw("&nbsp;"); 
        @:< @NewsRes.NewsStrings.Previous
    } 
    &nbsp; 
    @if (Model.HasNextPage)
    { 
        @Html.ActionLink(NewsRes.NewsStrings.Next + " >", "Index", new { page = Model.PageNumber + 1 }) 
        @Html.Raw("&nbsp;"); 
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount }) 
    }
    else
    { 
        @NewsRes.NewsStrings.Next @:> 
        @Html.Raw("&nbsp;") 
        @:>> 
    } 
</div>